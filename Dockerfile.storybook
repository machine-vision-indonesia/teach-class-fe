# Stage 1: Base
FROM node:20-alpine AS base
LABEL maintainer="tech@machinevision.global" \
      version="2.0" \
      description="Machine Vision Digitalization Platform Storybook"

# Install libc6-compat which might be needed for certain Node.js native modules
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why
RUN apk add --no-cache libc6-compat
RUN npm install -g npm@latest
WORKDIR /app

# Stage 2: Dependencies
FROM base AS deps
COPY package*.json ./
RUN npm install --legacy-peer-deps

# Stage 3: Builder
FROM base AS builder
COPY --from=deps /app/node_modules ./node_modules
COPY . .
RUN cp .env.storybook .env && npm run build-storybook

# Stage 4: Serve
FROM nginx:stable-alpine
# Health check to ensure the container is healthy
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --quiet --tries=1 --spider http://localhost/ || exit 1

# Copy the build output to replace the default nginx contents.
COPY --from=builder /app/storybook-static /usr/share/nginx/html
# Copy nginx configuration
COPY --from=builder /app/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Start Nginx server
CMD ["nginx", "-g", "daemon off;"]
